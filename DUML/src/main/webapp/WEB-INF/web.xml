<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<display-name>Archetype Created Web Application</display-name>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<context-param>
		<!-- Indica la ubicación del archivo de configuración del contexto -->
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!-- Permite cargar objetos que tienen definida la carga 'perezosa' de Hibernate 
		evitando con ello tener que abrir sesiones para cada objeto asociado -->
	<filter>
		<filter-name>openSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate5.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>flushMode</param-name>
			<param-value>ALWAYS</param-value>
		</init-param>
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>sessionFactory</param-value>
		</init-param>
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>

	<!-- Filtra las peticiones para asegurarse que han iniciado sesión, en caso 
		de no tener los parámetros solicitados entonces redirige a login. Para excluir 
		páginas se puede usar un mapeo de filtro o simplemente se pueden agregar 
		a la lista del parametro excluir, separadas por coma y relativas al la ruta 
		con contexto. Se excluyen automáticamente Login.jsp y Login.do (para iniciar 
		sesión) -->
	<filter>
		<filter-name>FiltroSesion</filter-name>
		<filter-class>mx.ipn.escom.wad.duml.filters.FiltroSesion</filter-class>
		<init-param>
			<param-name>excluir</param-name>
			<param-value>/Registro.jsp,/Registro.do,/index.jsp,/</param-value>
		</init-param>
	</filter>

	<!-- Se mapea el filtro que permite abrir sesiones durante una petición 
		para obtener que no son cargados mediante el dao -->
	<filter-mapping>
		<filter-name>openSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Se mapea el filtro de sesiones -->
	<filter-mapping>
		<filter-name>FiltroSesion</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Controla el inicio de sesión -->
	<servlet>
		<servlet-name>LoginCtrl</servlet-name>
		<servlet-class>mx.ipn.escom.wad.duml.servlets.LoginCtrl</servlet-class>
	</servlet>
	
	<!-- Controla la finalización de sesión -->
	<servlet>
		<servlet-name>LogoutCtrl</servlet-name>
		<servlet-class>mx.ipn.escom.wad.duml.servlets.LogoutCtrl</servlet-class>
	</servlet>
	
	<!-- Controla el registro -->
	<servlet>
		<servlet-name>RegistroCtrl</servlet-name>
		<servlet-class>mx.ipn.escom.wad.duml.servlets.RegistroCtrl</servlet-class>
	</servlet>
	
	<!-- Mapeo para ejecutar el inicio de sesión -->
	<servlet-mapping>
		<servlet-name>LoginCtrl</servlet-name>
		<url-pattern>/Login.do</url-pattern>
	</servlet-mapping>
	
	<!-- Mapeo para ejecutar el cierre de sesión -->
	<servlet-mapping>
		<servlet-name>LogoutCtrl</servlet-name>
		<url-pattern>/Logout.do</url-pattern>
	</servlet-mapping>

	<!-- Mapeo para ejecutar el registro -->
	<servlet-mapping>
		<servlet-name>RegistroCtrl</servlet-name>
		<url-pattern>/Registro.do</url-pattern>
	</servlet-mapping>

	<!-- Listener que crea el contexto necesario una vez que se ejecuta la aplicación 
		web, lee y parsea el context-param definido en este mismo archivo -->
	<session-config>
		<session-timeout>20</session-timeout>
	</session-config>
</web-app>